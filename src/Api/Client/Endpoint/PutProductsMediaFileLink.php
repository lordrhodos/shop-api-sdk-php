<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Starweb\Api\Client\Endpoint;

class PutProductsMediaFileLink extends \Jane\OpenApiRuntime\Client\BaseEndpoint implements \Jane\OpenApiRuntime\Client\Psr7HttplugEndpoint
{
    protected $productId;
    protected $mediaFileId;

    /**
     * Updates a product media file link.
                       Retrieves the update `ProductMediaFileLink` object.
     *
     * @param int                                                 $productId   The product id
     * @param int                                                 $mediaFileId The media file id of the link you want to fetch/change
     * @param \Starweb\Api\Client\Model\ProductMediaFileLinkModel $requestBody
     */
    public function __construct(int $productId, int $mediaFileId, \Starweb\Api\Client\Model\ProductMediaFileLinkModel $requestBody)
    {
        $this->productId = $productId;
        $this->mediaFileId = $mediaFileId;
        $this->body = $requestBody;
    }

    use \Jane\OpenApiRuntime\Client\Psr7HttplugEndpointTrait;

    public function getMethod(): string
    {
        return 'PUT';
    }

    public function getUri(): string
    {
        return str_replace(['{productId}', '{mediaFileId}'], [$this->productId, $this->mediaFileId], '/products/{productId}/media-files/{mediaFileId}');
    }

    public function getBody(\Symfony\Component\Serializer\SerializerInterface $serializer, \Http\Message\StreamFactory $streamFactory = null): array
    {
        if ($this->body instanceof \Starweb\Api\Client\Model\ProductMediaFileLinkModel) {
            return [['Content-Type' => ['application/json']], $serializer->serialize($this->body, 'json')];
        }

        return [[], null];
    }

    public function getExtraHeaders(): array
    {
        return ['Accept' => ['application/json']];
    }

    /**
     * {@inheritdoc}
     *
     * @throws \Starweb\Api\Client\Exception\PutProductsMediaFileLinkBadRequestException
     * @throws \Starweb\Api\Client\Exception\PutProductsMediaFileLinkNotFoundException
     *
     * @return \Starweb\Api\Client\Model\ProductMediaFileLinkModelItem|null
     */
    protected function transformResponseBody(string $body, int $status, \Symfony\Component\Serializer\SerializerInterface $serializer, ?string $contentType = null)
    {
        if (200 === $status && 'application/json' === $contentType) {
            return $serializer->deserialize($body, 'Starweb\\Api\\Client\\Model\\ProductMediaFileLinkModelItem', 'json');
        }
        if (400 === $status && 'application/json' === $contentType) {
            throw new \Starweb\Api\Client\Exception\PutProductsMediaFileLinkBadRequestException($serializer->deserialize($body, 'Starweb\\Api\\Client\\Model\\ErrorModel', 'json'));
        }
        if (404 === $status && 'application/json' === $contentType) {
            throw new \Starweb\Api\Client\Exception\PutProductsMediaFileLinkNotFoundException($serializer->deserialize($body, 'Starweb\\Api\\Client\\Model\\ErrorModel', 'json'));
        }
    }
}
