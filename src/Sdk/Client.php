<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Starweb\Sdk;

class Client extends \Jane\OpenApiRuntime\Client\Psr7HttplugClient
{
    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GenerateFetchAccessTokenBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function generateFetchAccessToken(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GenerateFetchAccessToken(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getCurrencies(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetCurrencies(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetCurrencyNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getCurrency(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetCurrency(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getCustomersTags(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetCustomersTags(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetCustomersTagNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getCustomersTag(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetCustomersTag(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\ListCustomersBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function listCustomers(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\ListCustomers(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\CreateCustomerBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function createCustomer(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\CreateCustomer(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\DeleteCustomerNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function deleteCustomer(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\DeleteCustomer(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetCustomerNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getCustomer(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetCustomer(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PatchCustomerBadRequestException
     * @throws \Starweb\Sdk\Exception\PatchCustomerNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function patchCustomer(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PatchCustomer(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PutCustomerBadRequestException
     * @throws \Starweb\Sdk\Exception\PutCustomerNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function putCustomer(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PutCustomer(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getCustomerExternalServices(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetCustomerExternalServices(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetCustomerExternalServiceNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getCustomerExternalService(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetCustomerExternalService(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getCustomerTags(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetCustomerTags(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\AddTagToCustomerBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function addTagToCustomer(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\AddTagToCustomer(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\RemoveTagFromCustomerNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function removeTagFromCustomer(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\RemoveTagFromCustomer(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetCustomerTagNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getCustomerTag(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetCustomerTag(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getCustomerGroups(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetCustomerGroups(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\RemoveAddressFromCustomerNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function removeAddressFromCustomer(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\RemoveAddressFromCustomer(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetCustomerAddressNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getCustomerAddress(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetCustomerAddress(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PatchCustomerAddressBadRequestException
     * @throws \Starweb\Sdk\Exception\PatchCustomerAddressNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function patchCustomerAddress(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PatchCustomerAddress(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PutCustomerAddressBadRequestException
     * @throws \Starweb\Sdk\Exception\PutCustomerAddressNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function putCustomerAddress(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PutCustomerAddress(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getMediaFiles(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetMediaFiles(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\CreateMediaFileBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function createMediaFile(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\CreateMediaFile(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\DeleteMediaFileNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function deleteMediaFile(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\DeleteMediaFile(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetMediaFileNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getMediaFile(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetMediaFile(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PatchMediaFileBadRequestException
     * @throws \Starweb\Sdk\Exception\PatchMediaFileNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function patchMediaFile(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PatchMediaFile(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PutMediaFileBadRequestException
     * @throws \Starweb\Sdk\Exception\PutMediaFileNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function putMediaFile(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PutMediaFile(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\ListOrdersBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function listOrders(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\ListOrders(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\CreateOrderBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function createOrder(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\CreateOrder(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\DeleteOrderNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function deleteOrder(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\DeleteOrder(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetOrderNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getOrder(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetOrder(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PatchOrderBadRequestException
     * @throws \Starweb\Sdk\Exception\PatchOrderNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function patchOrder(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PatchOrder(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PutOrderBadRequestException
     * @throws \Starweb\Sdk\Exception\PutOrderNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function putOrder(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PutOrder(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function listOrderAddresses(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\ListOrderAddresses(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\DeleteOrderAddressNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function deleteOrderAddress(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\DeleteOrderAddress(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetOrderAddressNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getOrderAddress(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetOrderAddress(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PatchOrderAddressBadRequestException
     * @throws \Starweb\Sdk\Exception\PatchOrderAddressNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function patchOrderAddress(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PatchOrderAddress(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PutOrderAddressBadRequestException
     * @throws \Starweb\Sdk\Exception\PutOrderAddressNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function putOrderAddress(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PutOrderAddress(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getOrderComments(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetOrderComments(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetOrderCommentNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getOrderComment(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetOrderComment(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getOrderExternalServices(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetOrderExternalServices(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\CreateOrderExternalServiceBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function createOrderExternalService(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\CreateOrderExternalService(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\DeleteOrderExternalServiceNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function deleteOrderExternalService(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\DeleteOrderExternalService(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetOrderExternalServiceNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getOrderExternalService(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetOrderExternalService(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PatchOrderExternalServiceBadRequestException
     * @throws \Starweb\Sdk\Exception\PatchOrderExternalServiceNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function patchOrderExternalService(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PatchOrderExternalService(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PutOrderExternalServiceBadRequestException
     * @throws \Starweb\Sdk\Exception\PutOrderExternalServiceNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function putOrderExternalService(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PutOrderExternalService(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getOrderItems(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetOrderItems(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\CreateOrderItemBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function createOrderItem(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\CreateOrderItem(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\DeleteOrderItemNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function deleteOrderItem(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\DeleteOrderItem(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetOrderItemNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getOrderItem(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetOrderItem(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PatchOrderItemBadRequestException
     * @throws \Starweb\Sdk\Exception\PatchOrderItemNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function patchOrderItem(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PatchOrderItem(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PutOrderItemBadRequestException
     * @throws \Starweb\Sdk\Exception\PutOrderItemNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function putOrderItem(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PutOrderItem(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getOrderStatuses(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetOrderStatuses(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\CreateOrderStatusBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function createOrderStatus(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\CreateOrderStatus(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\DeleteOrderStatusForbiddenException
     * @throws \Starweb\Sdk\Exception\DeleteOrderStatusNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function deleteOrderStatus(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\DeleteOrderStatus(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetOrderStatusNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getOrderStatus(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetOrderStatus(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PatchOrderStatusBadRequestException
     * @throws \Starweb\Sdk\Exception\PatchOrderStatusForbiddenException
     * @throws \Starweb\Sdk\Exception\PatchOrderStatusNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function patchOrderStatus(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PatchOrderStatus(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PutOrderStatusBadRequestException
     * @throws \Starweb\Sdk\Exception\PutOrderStatusForbiddenException
     * @throws \Starweb\Sdk\Exception\PutOrderStatusNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function putOrderStatus(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PutOrderStatus(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getPaymentMethods(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetPaymentMethods(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetPaymentMethodNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getPaymentMethod(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetPaymentMethod(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getPricelists(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetPricelists(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetPricelistNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getPricelist(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetPricelist(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\ListProductsVariantsAttributesBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function listProductsVariantsAttributes(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\ListProductsVariantsAttributes(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\CreateAttributeBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function createAttribute(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\CreateAttribute(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\DeleteAttributeNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function deleteAttribute(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\DeleteAttribute(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetProductsVariantsAttributeNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getProductsVariantsAttribute(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetProductsVariantsAttribute(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PatchAttributeBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function patchAttribute(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PatchAttribute(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PutAttributeBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function putAttribute(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PutAttribute(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\ListProductsVariantsAttributeValuesBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function listProductsVariantsAttributeValues(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\ListProductsVariantsAttributeValues(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\CreateProductsVariantsAttributeValuesBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function createProductsVariantsAttributeValues(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\CreateProductsVariantsAttributeValues(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\DeleteAttributeValueNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function deleteAttributeValue(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\DeleteAttributeValue(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetProductsVariantsAttributeValueNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getProductsVariantsAttributeValue(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetProductsVariantsAttributeValue(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PatchProductsVariantsAttributeValuesBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function patchProductsVariantsAttributeValues(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PatchProductsVariantsAttributeValues(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PutProductsVariantsAttributeValuesBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function putProductsVariantsAttributeValues(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PutProductsVariantsAttributeValues(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\ListProductCategoriesBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function listProductCategories(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\ListProductCategories(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\CreateProductCategoryBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function createProductCategory(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\CreateProductCategory(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\DeleteProductCategoryNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function deleteProductCategory(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\DeleteProductCategory(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetProductCategoryNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getProductCategory(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetProductCategory(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PatchProductCategoryBadRequestException
     * @throws \Starweb\Sdk\Exception\PatchProductCategoryNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function patchProductCategory(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PatchProductCategory(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PutProductCategoryBadRequestException
     * @throws \Starweb\Sdk\Exception\PutProductCategoryNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function putProductCategory(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PutProductCategory(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\ListProductManufacturersBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function listProductManufacturers(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\ListProductManufacturers(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\CreateProductManufacturersBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function createProductManufacturers(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\CreateProductManufacturers(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\DeleteProductManufacturerNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function deleteProductManufacturer(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\DeleteProductManufacturer(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetProductManufacturerNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getProductManufacturer(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetProductManufacturer(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PatchProductManufacturerNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function patchProductManufacturer(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PatchProductManufacturer(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PutProductManufacturerNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function putProductManufacturer(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PutProductManufacturer(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\ListProductUnitsBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function listProductUnits(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\ListProductUnits(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetProductUnitNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getProductUnit(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetProductUnit(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\ListProductMetaDataTypesBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function listProductMetaDataTypes(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\ListProductMetaDataTypes(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetProductMetaDataTypeNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getProductMetaDataType(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetProductMetaDataType(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\ListProductStockStatsesBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function listProductStockStatses(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\ListProductStockStatses(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\CreateProductStockStatusBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function createProductStockStatus(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\CreateProductStockStatus(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\DeleteProductStockStatusNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function deleteProductStockStatus(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\DeleteProductStockStatus(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetProductStockStatusNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getProductStockStatus(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetProductStockStatus(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PatchProductStockStatusBadRequestException
     * @throws \Starweb\Sdk\Exception\PatchProductStockStatusNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function patchProductStockStatus(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PatchProductStockStatus(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PutProductStockStatusBadRequestException
     * @throws \Starweb\Sdk\Exception\PutProductStockStatusNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function putProductStockStatus(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PutProductStockStatus(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\ListProductsBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function listProducts(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\ListProducts(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\CreateProductBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function createProduct(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\CreateProduct(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\DeleteProductNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function deleteProduct(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\DeleteProduct(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetProductNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getProduct(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetProduct(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PatchProductBadRequestException
     * @throws \Starweb\Sdk\Exception\PatchProductNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function patchProduct(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PatchProduct(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PutProductBadRequestException
     * @throws \Starweb\Sdk\Exception\PutProductNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function putProduct(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PutProduct(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\ListProductsVariantsBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function listProductsVariants(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\ListProductsVariants(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\CreateProductVariantBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function createProductVariant(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\CreateProductVariant(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\DeleteProductsVariantNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function deleteProductsVariant(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\DeleteProductsVariant(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetProductsVariantNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getProductsVariant(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetProductsVariant(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PatchProductsVariantBadRequestException
     * @throws \Starweb\Sdk\Exception\PatchProductsVariantNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function patchProductsVariant(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PatchProductsVariant(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PutProductsVariantBadRequestException
     * @throws \Starweb\Sdk\Exception\PutProductsVariantNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function putProductsVariant(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PutProductsVariant(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\ListProductsVatRatesBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function listProductsVatRates(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\ListProductsVatRates(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\CreateProductVatRateBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function createProductVatRate(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\CreateProductVatRate(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\DeleteProductsVatRateNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function deleteProductsVatRate(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\DeleteProductsVatRate(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetProductsVatRateNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getProductsVatRate(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetProductsVatRate(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PatchProductsVatRateBadRequestException
     * @throws \Starweb\Sdk\Exception\PatchProductsVatRateNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function patchProductsVatRate(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PatchProductsVatRate(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PutProductsVatRateBadRequestException
     * @throws \Starweb\Sdk\Exception\PutProductsVatRateNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function putProductsVatRate(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PutProductsVatRate(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\ListProductsMediaFileLinksBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function listProductsMediaFileLinks(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\ListProductsMediaFileLinks(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\CreateProductsMediaFileLinkBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function createProductsMediaFileLink(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\CreateProductsMediaFileLink(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\DeleteProductsMediaFileLinkNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function deleteProductsMediaFileLink(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\DeleteProductsMediaFileLink(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetProductsMediaFileLinkNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getProductsMediaFileLink(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetProductsMediaFileLink(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PatchProductsMediaFileLinkBadRequestException
     * @throws \Starweb\Sdk\Exception\PatchProductsMediaFileLinkNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function patchProductsMediaFileLink(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PatchProductsMediaFileLink(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PutProductsMediaFileLinkBadRequestException
     * @throws \Starweb\Sdk\Exception\PutProductsMediaFileLinkNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function putProductsMediaFileLink(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PutProductsMediaFileLink(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\ListProductsLanguagesBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function listProductsLanguages(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\ListProductsLanguages(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\CreateProductsLanguageBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function createProductsLanguage(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\CreateProductsLanguage(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\DeleteProductsLanguageNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function deleteProductsLanguage(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\DeleteProductsLanguage(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetProductsLanguageNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getProductsLanguage(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetProductsLanguage(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PatchProductsLanguageBadRequestException
     * @throws \Starweb\Sdk\Exception\PatchProductsLanguageNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function patchProductsLanguage(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PatchProductsLanguage(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PutProductsLanguageBadRequestException
     * @throws \Starweb\Sdk\Exception\PutProductsLanguageNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function putProductsLanguage(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PutProductsLanguage(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\ListProductsCategoryLinksBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function listProductsCategoryLinks(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\ListProductsCategoryLinks(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\CreateProductsCategoryLinkBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function createProductsCategoryLink(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\CreateProductsCategoryLink(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\DeleteProductsCategoryLinkNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function deleteProductsCategoryLink(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\DeleteProductsCategoryLink(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetProductsCategoryLinkNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getProductsCategoryLink(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetProductsCategoryLink(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PatchProductsCategoryLinkBadRequestException
     * @throws \Starweb\Sdk\Exception\PatchProductsCategoryLinkNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function patchProductsCategoryLink(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PatchProductsCategoryLink(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PutProductsCategoryLinkBadRequestException
     * @throws \Starweb\Sdk\Exception\PutProductsCategoryLinkNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function putProductsCategoryLink(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PutProductsCategoryLink(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\ListProductsMetaDataBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function listProductsMetaData(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\ListProductsMetaData(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\CreateProductsMetaDataBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function createProductsMetaData(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\CreateProductsMetaData(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\DeleteProductsMetaDataNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function deleteProductsMetaData(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\DeleteProductsMetaData(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetProductsMetaDataNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getProductsMetaData(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetProductsMetaData(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PatchProductsMetaDataBadRequestException
     * @throws \Starweb\Sdk\Exception\PatchProductsMetaDataNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function patchProductsMetaData(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PatchProductsMetaData(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PutProductsMetaDataBadRequestException
     * @throws \Starweb\Sdk\Exception\PutProductsMetaDataNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function putProductsMetaData(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PutProductsMetaData(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\ListProductsAttributesNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function listProductsAttributes(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\ListProductsAttributes(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\AddProductsAttributesNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function addProductsAttributes(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\AddProductsAttributes(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\DeleteProductsAttributeNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function deleteProductsAttribute(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\DeleteProductsAttribute(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetProductsAttributeNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getProductsAttribute(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetProductsAttribute(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\ListProductsVariantsPricelistPricesBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function listProductsVariantsPricelistPrices(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\ListProductsVariantsPricelistPrices(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\CreateProductVariantPricelistPriceBadRequestException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function createProductVariantPricelistPrice(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\CreateProductVariantPricelistPrice(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\DeleteProductsVariantsPricelistPriceNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function deleteProductsVariantsPricelistPrice(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\DeleteProductsVariantsPricelistPrice(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetProductsVariantsPricelistPriceNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getProductsVariantsPricelistPrice(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetProductsVariantsPricelistPrice(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PatchProductsVariantsPricelistPriceBadRequestException
     * @throws \Starweb\Sdk\Exception\PatchProductsVariantsPricelistPriceNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function patchProductsVariantsPricelistPrice(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PatchProductsVariantsPricelistPrice(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\PutProductsVariantsPricelistPriceBadRequestException
     * @throws \Starweb\Sdk\Exception\PutProductsVariantsPricelistPriceNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function putProductsVariantsPricelistPrice(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\PutProductsVariantsPricelistPrice(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getShippingMethods(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetShippingMethods(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetShippingMethodNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getShippingMethod(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetShippingMethod(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getShippingTrackingTypes(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetShippingTrackingTypes(), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Starweb\Sdk\Exception\GetShopNotFoundException
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     */
    public function getShop(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executePsr7Endpoint(new \Starweb\Sdk\Endpoint\GetShop(), $fetch);
    }

    public static function create($httpClient = null)
    {
        if (null === $httpClient) {
            $httpClient = \Http\Discovery\HttpClientDiscovery::find();
        }
        $messageFactory = \Http\Discovery\MessageFactoryDiscovery::find();
        $streamFactory = \Http\Discovery\StreamFactoryDiscovery::find();
        $serializer = new \Symfony\Component\Serializer\Serializer(\Starweb\Sdk\Normalizer\NormalizerFactory::create(), [new \Symfony\Component\Serializer\Encoder\JsonEncoder(new \Symfony\Component\Serializer\Encoder\JsonEncode(), new \Symfony\Component\Serializer\Encoder\JsonDecode())]);

        return new static($httpClient, $messageFactory, $serializer, $streamFactory);
    }
}
